// <auto-generated />
using System;
using ControlIDMvc;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControlIDMvc.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20220821211121_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ControlIDMvc.Entities.Departamento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("creado_por")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("estado")
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext");

                    b.Property<int>("proyecto_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("ControlIDMvc.Entities.Dia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("hora_fin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("hora_inicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("horario_id")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("horario_id");

                    b.ToTable("Dia");
                });

            modelBuilder.Entity("ControlIDMvc.Entities.Grupo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("creado_porid")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("estado")
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext");

                    b.Property<int?>("proyectoid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("creado_porid");

                    b.HasIndex("proyectoid");

                    b.ToTable("Grupo");
                });

            modelBuilder.Entity("ControlIDMvc.Entities.Horario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Horario");
                });

            modelBuilder.Entity("ControlIDMvc.Entities.Persona", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .HasColumnType("longtext");

                    b.Property<string>("celular")
                        .HasColumnType("longtext");

                    b.Property<string>("ci")
                        .HasColumnType("longtext");

                    b.Property<string>("contraseña")
                        .HasColumnType("longtext");

                    b.Property<string>("dirrecion")
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("fecha_nac")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("image_documento")
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("observaciones")
                        .HasColumnType("longtext");

                    b.Property<string>("usuario")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("ControlIDMvc.Entities.Proyecto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("dirrecion")
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("estado")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("fecha_fin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("fecha_inicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("telefono")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Proyecto");
                });

            modelBuilder.Entity("ControlIDMvc.Entities.Usuario", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .HasColumnType("longtext");

                    b.Property<string>("celular")
                        .HasColumnType("longtext");

                    b.Property<string>("ci")
                        .HasColumnType("longtext");

                    b.Property<string>("contraseña_tarjeta")
                        .HasColumnType("longtext");

                    b.Property<string>("dirrecion")
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("estado")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("fecha_nac")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("nota")
                        .HasColumnType("longtext");

                    b.Property<string>("num_tarjeta")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ControlIDMvc.Entities.Dia", b =>
                {
                    b.HasOne("ControlIDMvc.Entities.Horario", "horario")
                        .WithMany("dias")
                        .HasForeignKey("horario_id");

                    b.Navigation("horario");
                });

            modelBuilder.Entity("ControlIDMvc.Entities.Grupo", b =>
                {
                    b.HasOne("ControlIDMvc.Entities.Persona", "creado_por")
                        .WithMany()
                        .HasForeignKey("creado_porid");

                    b.HasOne("ControlIDMvc.Entities.Proyecto", "proyecto")
                        .WithMany()
                        .HasForeignKey("proyectoid");

                    b.Navigation("creado_por");

                    b.Navigation("proyecto");
                });

            modelBuilder.Entity("ControlIDMvc.Entities.Usuario", b =>
                {
                    b.HasOne("ControlIDMvc.Entities.Departamento", "departamento_id")
                        .WithMany()
                        .HasForeignKey("id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControlIDMvc.Entities.Grupo", "grupo_id")
                        .WithMany()
                        .HasForeignKey("id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControlIDMvc.Entities.Proyecto", "proyecto_id")
                        .WithMany()
                        .HasForeignKey("id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("departamento_id");

                    b.Navigation("grupo_id");

                    b.Navigation("proyecto_id");
                });

            modelBuilder.Entity("ControlIDMvc.Entities.Horario", b =>
                {
                    b.Navigation("dias");
                });
#pragma warning restore 612, 618
        }
    }
}
